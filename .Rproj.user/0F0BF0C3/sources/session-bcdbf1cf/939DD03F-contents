#### Violence and coercive policing

library(tidyverse)
library(lme4)
library(sjstats)
library(MASS)
library(texreg)
library(lavaan)
library(ltm)
library(dpm)
library(panelr)
options(scipen=999)


######################################################

# Read data
load('data/dflong_new.Rdata')

# Cleaning data
dflong <- 
  dflong %>%
  mutate(vio = vio1 + vio2 + vio3 + vio4 + vio5 + vio6,
         vio_binary = if_else(
           vio3 == T | vio4 == T | vio5 == T, T, F
         ),
         gunall = gun == T,
         class = as.numeric(class),
         toppol = factor(toppol, levels = c("Consent", "Protest", "Rejection", "Coercion")),
         newid = as.factor(row.names(dflong)),
         law1 = case_when(
           law1 == 1 ~ 5,
           law1 == 2 ~ 4,
           law1 == 3 ~ 3,
           law1 == 4 ~ 2,
           law1 == 5 ~ 1,
           TRUE ~ NA_real_
         ),
         area1 = area == 1,
         area2 = area == 2,
         area3 = area == 3,
         area4 = area == 4,
         area5 = area == 5,
         area6 = area == 6,
         area7 = area == 7,
         area8 = area == 8,
         classA = class == 1,
         classB1 = class == 2,
         classB2 = class == 3,
         classC1 = class == 4,
         classC2 = class == 5,
         classDE = class == 6,
         ) %>%
  mutate(gunall = replace_na(gunall, 0),
         across(c(vio1:vio6, und2, und3, law1, ovp1, ovp2, pj1:pj4), ordered))


####################################################
# Measuring latent variables

cfa.lc <- cfa('lc =~ und3 + und2 + law1',
              estimator = 'pml', missing = 'pairwise', dflong)

#cfa.ovp <- cfa('ovp =~ ovp1 + ovp2',
#                estimator = 'pml', missing = 'pairwise', dflong)
irt_ovp <- 
  dflong %>%
  dplyr::select(ovp1, ovp2) %>%
  grm() %>%
  factor.scores.grm(resp.patterns = dflong %>% dplyr::select(ovp1, ovp2))


cfa.pj <- cfa('pj =~ pj1 + pj2 + pj3 + pj4',
              estimator = 'pml', missing = 'pairwise', dflong)

cfa.vio <- cfa('vio_scale =~ vio3 + vio4 + vio5', 
               estimator = 'pml', missing = 'pairwise', dflong)

irt_vio <- 
  ltm(
    dflong %>%
      dplyr::select(vio1:vio6) ~ z1
  ) %>%
  #dflong %>%
  #dplyr::select(vio3:vio5) %>%
  #ltm() %>%
  factor.scores.ltm(resp.patterns = dflong %>% dplyr::select(vio1:vio6))

dflong <-
  dflong %>%
  mutate(lc = lavPredict(cfa.lc)[ , 'lc'],
         #ovp = lavPredict(cfa.ovp)[, 'ovp'],
         ovp = irt_ovp$score.dat$z1,
         pj = lavPredict(cfa.pj)[, 'pj'],
         vio_scale = lavPredict(cfa.vio)[, 'vio_scale'],
         vio_irt = irt_vio$score.dat$z1)

dflong %>% dplyr::select(ovp, lc, pj) %>% cor(use = 'complete.obs')
dflong %>% dplyr::select(vio_scale, vio, vio_irt) %>% cor(use = 'complete.obs')


### Measuring police legitimacy

# 1) Export data to Mplus
dflong %>%
  dplyr::select(newid, napol1, napol2, fearpolgen, fearpolper, toppol) %>%
  prepareMplusData(filename = 'data/police_legitimacy.dat')

# 2) Run IRT model on Mplus

# 3) Save IRT scores from Mplus

dflong <-
  dflong %>%
  left_join(read.table('data/continuum_long.txt') %>%
              rename('newid' = 'V4',
                     'legitimacy' = 'V5') %>%
              dplyr::select(newid, legitimacy) %>%
              mutate(newid = as.factor(newid)),
            by = 'newid')


# Correlation matrices between latent constructs by wave
cor_constucts_1 <- dflong %>% filter(wave == 1) %>% dplyr::select(ovp, lc, pj, legitimacy) %>% cor(use = 'complete.obs')
cor_constucts_2 <- dflong %>% filter(wave == 2) %>% dplyr::select(ovp, lc, pj, legitimacy) %>% cor(use = 'complete.obs')
cor_constucts_3 <- dflong %>% filter(wave == 3) %>% dplyr::select(ovp, lc, pj, legitimacy) %>% cor(use = 'complete.obs')


###################################################

# Table 1
dflong %>%
  mutate(across(c(ovp1, ovp2, und2, und3, law1, vio3:vio6, pj1:pj4), as.numeric)) %>%
  mutate(across(c(vio3:vio6), ~case_when(
    . == 1 ~ 0L,
    . == 2 ~ 1L
  ))) %>%
  group_by(wave) %>%
  summarise(ovp_abovelaw = mean(ovp1, na.rm = T),
            ovp_harass = mean(ovp2, na.rm = T),
            und_law = mean(law1, na.rm = T),
            und_mysafety = mean(und3, na.rm = T),
            und_neighsafe = mean(und2, na.rm = T),
            napol = mean(napol1, na.rm = T),
            fear = mean(fearpolgen, na.rm = T),
            duty = mean(dutypol, na.rm = T),
            norm = mean(polcons, na.rm = T),
            coer = mean(polcoer, na.rm = T),
            disob = mean(polprot, na.rm = T),
            rej = mean(polrej, na.rm = T),
            vio3 = mean(vio3, na.rm = T),
            vio4 = mean(vio4, na.rm = T),
            vio5 = mean(vio5, na.rm = T),
            vio6 = mean(vio6, na.rm = T),
            pj1 = mean(pj1, na.rm = T),
            pj2 = mean(pj2, na.rm = T),
            pj3 = mean(pj3, na.rm = T),
            pj4 = mean(pj4, na.rm = T),
            stop = mean(stop, na.rm = T),
            gun = mean(gunall, na.rm = T),
            white = mean(white, na.rm = T),
            male = mean(male, na.rm = T),
            class = mean(class, na.rm = T)
  )


# Table 2
dflong %>%
  dplyr::select(quest, wave,
                white, class, male, area,
                ovp, lc, stop, gun, age) %>%
  pivot_wider(id_cols = c('quest', 'white', 'class', 'male', 'area'),
              names_from = wave,
              values_from = c('ovp', 'lc', 'stop', 'gun', 'age')) %>%
  mutate(youth = age_1 < 25,
         youth2 = age_1 < 30,
         youngmale = age_1 < 25 & male == T) %>%
  group_by(area) %>%
  summarise(
    white = mean(white, na.rm = T),
    class = mean(class, na.rm = T),
    ovp = mean(ovp_1, na.rm = T),
    lc = mean(lc_1, na.rm = T),
    stop = mean(stop_1, na.rm = T),
    gun = mean(gun_1, na.rm = T),
    young = mean(youth, na.rm = T),
    youngadults = mean(youth2, na.rm = T),
    youngmale = mean(youngmale, na.rm = T)
  )

# area2 = Area 1: reference group
# area8 = Area 2
# area4 = Area 3
# area3 = Area 4
# area7 = Area 5
# area5 = Area 6
# area6 = Area 7
# area1 = Area 8


###################################################

## FIRST PART: DYNAMICS OF THE OVERPOLICING-UNDERPOLICING PARADOX
# Cross-lagged panel model

df_dpm <-
  dflong %>%
  panel_data(id = quest,
             wave = wave)
  
dpm_ovp <- dpm(ovp ~ lc + gun | white + male + classA + classB1 + classB2 + classC2 + classDE + area1 + area3 + area4 + area5 + area6 + area7 + area8,
               data = df_dpm, error.inv = T, information = "observed", missing = "fiml", x.free = F)
dpm_lc <- dpm(lc ~ ovp + + gun | white + male + classA + classB1 + classB2 + classC2 + classDE + area1 + area3 + area4 + area5 + area6 + area7 + area8,
              data = df_dpm, error.inv = T, information = "observed", missing = "fiml", x.free = F)

dpm.plot_data <-
  summary(dpm_ovp, standardized = T, ci = T)$coefficients %>% 
  mutate(model = 'M2: Perceptions of \n police intrusion') %>%
  full_join(summary(dpm_lc, standardized = T, ci = T)$coefficients %>%
              mutate(model = 'M1: Cynicism about \n police protection')) %>%
  tibble() %>%
  add_row(t = '2', coef = 'area2TRUE', model = 'M2: Perceptions of \n police intrusion') %>%
    add_row(t = '2', coef = 'area2TRUE', model = 'M1: Cynicism about \n police protection') %>%
    add_row(t = '2', coef = 'lc (t - 1)', model = 'M2: Perceptions of \n police intrusion') %>%
    add_row(t = '2', coef = 'ovp (t - 1)', model = 'M1: Cynicism about \n police protection') %>%
    add_row(t = '2', coef = 'classC1', model = 'M2: Perceptions of \n police intrusion') %>%
    add_row(t = '2', coef = 'classC1', model = 'M1: Cynicism about \n police protection')
  

plot.dpm_reciprocal <- ggplot(dpm.plot_data %>% 
                            filter(coef %in% c('ovp', 'lc', 'ovp (t - 1)', 'lc (t - 1)')) %>% 
                            mutate(coef = case_when(
                              coef == 'ovp (t - 1)' ~ 'ovp', 
                              coef == 'lc (t - 1)' ~ 'lc', 
                              TRUE ~ coef)) %>%
                            drop_na, aes(y = Est., x = coef)) +
  geom_errorbar(aes(ymin = `2.5%`, ymax = `97.5%`), size = 0.2, width = .1, position = position_dodge(), show.legend = T) + 
  geom_hline(yintercept = 0, size = .35, linetype = "dashed", color = 'darkgray') + 
  facet_grid(. ~ model, switch = "y")+#, scales = "free") +
  ylim(-.4,.4) +
  coord_flip() + 
  ylab("") + xlab("") + 
  labs(caption = 'Two ML-SEMs estimating the effects of perceptions of police intrusion on cynicism about police protection (M1)
                  and the effects of cynicism about police protection on perceptions of police intrusion (M2). \n
                  Fully standardized coefficients and 95% confidence intervals reported. n = 1200 for both models (using FIML).') + 
  guides(colour = guide_legend(title = "")) +
  theme(plot.title = element_text(hjust = .5, vjust = 2, colour = "#3C3C3C", size = 12)) +
  theme(axis.text.y = element_text(colour = "#3C3C3C", size = 10),
        axis.text.x = element_text(colour = "#3C3C3C", size = 8),
        legend.position="bottom") + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank(), axis.line = element_line(colour = "#3C3C3C", size = .2),
        legend.title = element_text(colour = "#3C3C3C", size = 12),
        legend.text = element_text(colour = "#3C3C3C", size = 12),
        strip.text.x = element_text(size = 12),
        panel.spacing.x=unit(1, "lines"),
        panel.spacing.y=unit(1, "lines"),
        plot.caption = element_text(hjust = 1,margin = unit(c(0,0,0,0), "mm")),
        plot.margin = margin(.5, 0, .5, 0, "cm")) + 
  theme(aspect.ratio = 2) + 
  scale_x_discrete(limits = c('lc', 'ovp'),
                   breaks = c('lc', 'ovp'),
                   labels = c('Cynicism about police protection', 'Perceptions of police intrusion')) 

plot.dpm_correlates <- ggplot(dpm.plot_data %>% 
                                  filter(!coef %in% c('ovp (t - 1)', 'ovp', 'lc (t - 1)', 'lc')),
                               aes(y = Est., x = coef)) + 
  geom_errorbar(aes(ymin = `2.5%`, ymax = `97.5%`), size = 0.2, width = .25, position = position_dodge(), show.legend = T) + 
  geom_hline(yintercept = 0, size = .35, linetype = "dashed", color = 'darkgray') + 
  facet_grid(. ~ model, switch = "y") +
  ylim(-.7,.7) +
  coord_flip() + 
  ylab("") + xlab("") + 
  labs(caption = 'Two ML-SEMs estimating the effects of perceptions of police intrusion on cynicism about police protection (M1)
                  and the effects of cynicism about police protection on perceptions of police intrusion (M2). \n
                  Fully standardized coefficients and 95% confidence intervals reported. n = 1200 for both models (using FIML).') + 
  guides(colour = guide_legend(title = "")) +
  theme(plot.title = element_text(hjust = .5, vjust = 2, colour = "#3C3C3C", size = 12)) +
  theme(axis.text.y = element_text(colour = "#3C3C3C", size = 10),
        axis.text.x = element_text(colour = "#3C3C3C", size = 8),
        legend.position="bottom") + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank(), axis.line = element_line(colour = "#3C3C3C", size = .2),
        legend.title = element_text(colour = "#3C3C3C", size = 12),
        legend.text = element_text(colour = "#3C3C3C", size = 12),
        strip.text.x = element_text(size = 12),
        panel.spacing.x=unit(1, "lines"),
        panel.spacing.y=unit(1, "lines"),
        plot.caption = element_text(hjust = 1,margin = unit(c(0,0,0,0), "mm")),
        plot.margin = margin(.5, 0, .5, 0, "cm")) + 
  theme(aspect.ratio = 2.5) + 
  scale_x_discrete(limits = c('classATRUE', 'classB1TRUE', 'classB2TRUE', 'classC2TRUE', 'classDETRUE', 'classC1', 
                              'maleTRUE', 'whiteTRUE', 'area1TRUE', 'area6TRUE', 'area5TRUE', 'area7TRUE', 
                              'area3TRUE', 'area4TRUE', 'area8TRUE', 'area2TRUE', 'gunTRUE'),
                   breaks = c('classATRUE', 'classB1TRUE', 'classB2TRUE', 'classC2TRUE', 'classDETRUE', 'classC1', 
                              'maleTRUE', 'whiteTRUE', 'area1TRUE', 'area6TRUE', 'area5TRUE', 'area7TRUE', 
                              'area3TRUE', 'area4TRUE', 'area8TRUE', 'area2TRUE', 'gunTRUE'),
                   labels = c('Social class: A', 'Social class: B1', 'Social class: B2', 'Social class: C2', 'Social class: D/E', 'Social class (reference group: C1)',
                              'Gender (1 = male)', 'Race (1 = White)',
                              'Area 8 (White, wealthy gated communities)', 'Area 7 (affluent, mostly White)',
                              'Area 6 (middle class, mostly White)', 'Area 5 (middle class, racially diverse)',
                              'Area 4 (poor and mostly non-White)', 'Area 3 (concentrated disadvantage, racially diverse)',
                              'Area 2 (peri-urban and racially diverse)', 'Area 1 (reference group: economically deprived)',
                              'Recent police stop at gunpoint'))

pdf('plots/dpm_reciprocal.pdf')
plot.dpm_reciprocal
dev.off()

pdf('plots/dpm_correlates.pdf')
plot.dpm_correlates
dev.off()

# area2 = Area 1: reference group
# area8 = Area 2
# area4 = Area 3
# area3 = Area 4
# area7 = Area 5
# area5 = Area 6
# area6 = Area 7
# area1 = Area 8

####################################################
## SECOND PART: CONSEQUENCES OF THE OVERPOLICING-UNDERPOLICING PARADOX

## Association between overpolicing and underpolicing and police legitimacy
m1 <- wbm(legitimacy ~ ovp + lc | class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 | (1| quest), data = df_dpm)
m2 <- wbm(legitimacy ~ ovp + lc + pj + gunall | class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 | (1| quest), data = df_dpm)

wbm.plot_data <-
  tibble(
    model = c('m1', 'm2') %>% rep(each = 4) %>% rep(each = 2),
    est = c('Within effects', 'Between effects') %>% rep(each = 4) %>% rep(2) %>% factor(levels = c('Within effects', 'Between effects')),
    variables = c('ovp', 'lc', 'pj', 'stop') %>% rep(2) %>% rep(2),
    coef = c(
      fixef(m1)['ovp'], fixef(m1)['lc'], NA, NA,
      fixef(m1)['`imean(ovp)`'], fixef(m1)['`imean(lc)`'], NA, NA,
      fixef(m2)['ovp'], fixef(m2)['lc'], fixef(m2)['pj'], fixef(m2)['stopTRUE'], 
      fixef(m2)['`imean(ovp)`'], fixef(m2)['`imean(lc)`'], fixef(m2)['pj'], fixef(m2)['`imean(gunallTRUE)`']
    ),
    cilow = c(
      confint(m1)['ovp', 1], confint(m1)['lc', 1], NA, NA,
      confint(m1)['`imean(ovp)`', 1], confint(m1)['`imean(lc)`', 1], NA, NA,
      confint(m2)['ovp', 1], confint(m2)['lc', 1], confint(m2)['pj', 1], confint(m2)['stopTRUE', 1],
      confint(m2)['`imean(ovp)`', 1], confint(m2)['`imean(lc)`', 1], confint(m2)['`imean(pj)`', 1], confint(m2)['`imean(gunallTRUE)`', 1]
    ),
    ciupp = c(
      confint(m1)['ovp', 2], confint(m1)['lc', 2], NA, NA,
      confint(m1)['`imean(ovp)`', 2], confint(m1)['`imean(lc)`', 2], NA, NA,
      confint(m2)['ovp', 2], confint(m2)['lc', 2], confint(m2)['pj', 2], confint(m2)['stopTRUE', 2],
      confint(m2)['`imean(ovp)`', 2], confint(m2)['`imean(lc)`', 2], confint(m2)['`imean(pj)`', 2], confint(m2)['`imean(gunallTRUE)`', 2]
    )
  )

plot.wbm <- ggplot(wbm.plot_data, aes(y = coef, x = variables, colour = model, group = model)) +
  geom_errorbar(aes(ymin = cilow, ymax = ciupp), width = .5, position = position_dodge(), lwd = .75, show.legend = T) + 
  geom_hline(yintercept = 0, size = .75, color = 'darkgray') + 
  facet_grid(. ~ est, switch = "y", scales = "free") +
  #ylim(-.5,.5) +
  coord_flip() + 
  ylab("") + xlab("") + 
  labs(caption = 'Within-between (hybrid) regression models estimated using R\'s package panelr.
                  Estimated coefficients and 95% confidence intervals reported.
                  Within-individual and between-individual effects reported. \n
       All models control from race, gender, social class, and neighborhood of residence.
       Model 2A includes perceptions of procedural fairness and a recent police stop as control variables. \n
       N = 2929 and n = 957 for Model 2A.
       N = 2923 and n = 951 for Model 2B.') + 
  guides(colour = guide_legend(title = "")) +
  theme(plot.title = element_text(hjust = .5, vjust = 2, colour = "#3C3C3C", size = 12)) +
  theme(axis.text.y = element_text(colour = "#3C3C3C", size = 10),
        axis.text.x = element_text(colour = "#3C3C3C", size = 8)) + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank(), axis.line = element_line(colour = "#3C3C3C", size = .2),
        legend.title = element_text(colour = "#3C3C3C", size = 12),
        legend.text = element_text(colour = "#3C3C3C", size = 12),
        strip.text.x = element_text(size = 12),
        panel.spacing.x=unit(1, "lines"),
        panel.spacing.y=unit(1, "lines"),
        plot.caption = element_text(hjust = 1,margin = unit(c(0,0,0,0), "mm")),
        plot.margin = margin(0, 0, 0, 0, "cm")) + 
  theme(aspect.ratio = 1.75) + 
  scale_x_discrete(limits = c('gunall', 'pj', 'lc', 'ovp'),
                   breaks = c('gunall', 'pj', 'lc', 'ovp'),
                   labels = c('Police stop at gunpoint', 'Perceived procedural fairness',
                              'Cynicism about police protection', 'Perceived police intrusion')) + 
  scale_colour_brewer(palette = "Set1", 
                      breaks = c('m1', 'm2'),
                      labels = c('Model 2A', 'Model 2B'))


## Association between police legitimacy and tolerance of violence

df_mediation <-
  dflong %>%
  mutate(vio_binary = case_when(
    vio_binary == T ~ 1L,
    vio_binary == F ~ 0L
  )) %>%
  dplyr::select(quest, white, male, wave, area1:area8, classA:classDE,
                lc, ovp, pj, vio_binary, vio_irt, legitimacy, gunall) %>%
  pivot_wider(id_cols = c(quest:classDE),
              names_from = wave,
              values_from = c(lc:gunall))

mediation <- sem(  
  ' 
    ovp_1 ~ white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + classA + classB1 + classB2 + classC2 + classDE
    lc_1 ~ white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + classA + classB1 + classB2 + classC2 + classDE
    legitimacy_1 ~ white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + classA + classB1 + classB2 + classC2 + classDE
    vio_irt_1 ~ white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + classA + classB1 + classB2 + classC2 + classDE
  
    ovp_3 ~ A1*ovp_2
    ovp_2 ~ A1*ovp_1
    lc_3 ~ A2*lc_2
    lc_2 ~ A2*lc_1
    
    legitimacy_3 ~ B*legitimacy_2 + D1*ovp_2 + D2*lc_2 + G*pj_2 + h*gunall_2
    legitimacy_2 ~ B*legitimacy_1 + D1*ovp_1 + D2*lc_1 + G*pj_1 + h*gunall_1
    
    vio_irt_3 ~ C*vio_irt_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1 + I*pj_2 + J*gunall_2
    vio_irt_2 ~ C*vio_irt_1 + E*legitimacy_1 + I*pj_1 + J*gunall_1
    
    # Indirect effects
    D1E := D1 * E
    D23 := D2 * E
    
    Total_ovp := F1 + (D1*E)
    Total_lc := F2 + (D2*E)
  ',
  std.lv = T, data = df_mediation, estimator = 'MLR', missing = "ML", fixed.x = T)

####

wbm(vio ~ legitimacy + ovp + lc + pj + gunall | class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 | (1| quest), data = df_dpm) %>% summary

# Model selection
m.ri <- lmer(vio_scale ~ wave + (1 | quest), dflong)
m.rs <- lmer(vio_scale ~ wave + (wave | quest), dflong)
list(m.ri, m.rs) %>% screenreg()

m.med.ri <- lmer(legitimacy ~ wave + (1 | quest), dflong)
m.med.rs <- lmer(legitimacy ~ wave + (wave | quest), dflong)
list(m.med.ri, m.med.rs) %>% screenreg()

m.violence <- wbm(vio_scale ~ ovp + lc + pj + gunall | class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 | (1| quest), data = df_dpm)
m.violence_med <- wbm(vio_scale ~ legitimacy + ovp + lc + pj + gunall | class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 | (1| quest), data = df_dpm)

m.violence_noleg <- lmer(vio_scale ~ ovp + lc + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), data = df_dpm)
m.violence_justleg <- lmer(vio_scale ~ legitimacy + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), data = df_dpm)
m.violence_all <- lmer(vio_scale ~ legitimacy + ovp + lc + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), data = df_dpm)
list(m.violence_noleg, m.violence_justleg, m.violence_all) %>% screenreg()

m.violence_ovp <- lmer(vio_scale ~ ovp + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), data = df_dpm)
m.violence_ovp_leg <- lmer(vio_scale ~ ovp + legitimacy + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), data = df_dpm)
m.violence_lc <- lmer(vio_scale ~ lc + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), data = df_dpm)
m.violence_lc_leg <- lmer(vio_scale ~ lc + legitimacy + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), data = df_dpm)

list(m.violence_ovp, m.violence_ovp_leg, m.violence_lc, m.violence_lc_leg) %>% screenreg()

m.violence1 <- glmer(vio3 ~ legitimacy + ovp + lc + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), family = binomial(link = 'logit'), data = df_dpm)
m.violence2 <- glmer(vio4 ~ legitimacy + ovp + lc + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), family = binomial(link = 'logit'), data = df_dpm)
m.violence3 <- glmer(vio5 ~ legitimacy + ovp + lc + pj + gunall + class + white + male + area1 + area3 + area4 + area5 + area6 + area7 + area8 + (1| quest), family = binomial(link = 'logit'), data = df_dpm)

# mediator model
m.mediator <- lmer(legitimacy ~ wave + ovp + lc + pj + gunall + white + male + class + area1 + area3 + area4 + area5 + area6 + area7 + area8 +
                     (1 | quest), REML = F, dflong)
m.outcome <- lmer(vio_irt ~ wave + legitimacy + ovp + lc + pj + gunall + white + male + class + area1 + area3 + area4 + area5 + area6 + area7 + area8 +
                     (1 | quest), REML = F, dflong)

m.mediatorFE <- lm(legitimacy ~ ovp + lc + pj + gunall + factor(quest) + factor(wave), dflong)
m.outcomeFE <- lm(vio_irt ~ legitimacy + ovp + lc + pj + gunall + factor(quest) + factor(wave), dflong)


m.outcome.vio3 <- glmer(vio3 ~ wave + legitimacy + ovp + lc + pj + stop + white + male + class + area1 + area3 + area4 + area5 + area6 + area7 + area8 +
                         (1 | quest), family = binomial(link = 'logit'), dflong)
m.outcome.vio4 <- glmer(vio4 ~ wave + legitimacy + ovp + lc + pj + stop + white + male + class + area1 + area3 + area4 + area5 + area6 + area7 + area8 +
                          (1 | quest), family = binomial(link = 'logit'), dflong)
m.outcome.vio5 <- glmer(vio5 ~ wave + legitimacy + ovp + lc + pj + stop + white + male + class + area1 + area3 + area4 + area5 + area6 + area7 + area8 +
                          (1 | quest), family = binomial(link = 'logit'), dflong)
m.outcome.vio6 <- glmer(vio6 ~ wave + legitimacy + ovp + lc + pj + stop + white + male + class + area1 + area3 + area4 + area5 + area6 + area7 + area8 +
                          (1 | quest), family = binomial(link = 'logit'), dflong)

# mediation
library(mediation)
med.model_ovp <- mediate(model.m = m.mediator, model.y = m.outcome, treat = 'ovp', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_lc <- mediate(model.m = m.mediator, model.y = m.outcome, treat = 'lc', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)

med.model_ovp_FE <- mediate(model.m = m.mediatorFE, model.y = m.outcomeFE, treat = 'ovp', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_lc_FE <- mediate(model.m = m.mediatorFE, model.y = m.outcomeFE, treat = 'lc', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)

med.model_ovp_WB <- mediate(model.m = m2, model.y = m.outcomeWB, treat = 'ovp', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_lc_WB <- mediate(model.m = m2, model.y = m.outcomeWB, treat = 'lc', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)

med.model_ovp_vio3 <- mediate(model.m = m.mediator, model.y = m.outcome.vio3, treat = 'ovp', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_lc_vio3 <- mediate(model.m = m.mediator, model.y = m.outcome.vio3, treat = 'lc', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_ovp_vio4 <- mediate(model.m = m.mediator, model.y = m.outcome.vio4, treat = 'ovp', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_lc_vio4 <- mediate(model.m = m.mediator, model.y = m.outcome.vio4, treat = 'lc', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_ovp_vio5 <- mediate(model.m = m.mediator, model.y = m.outcome.vio5, treat = 'ovp', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_lc_vio5 <- mediate(model.m = m.mediator, model.y = m.outcome.vio5, treat = 'lc', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_ovp_vio6 <- mediate(model.m = m.mediator, model.y = m.outcome.vio6, treat = 'ovp', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)
med.model_lc_vio6 <- mediate(model.m = m.mediator, model.y = m.outcome.vio6, treat = 'lc', mediator = 'legitimacy', sims = 1000, boot.ci.type = 'bca', control.value = -1, treat.value = 1)



# Model selection
var(dflong$vio) > mean(dflong$vio)
nb_intercept <- glmer.nb(vio ~ wave + (1 | quest), dflong)
nb_coef <- glmer.nb(vio ~ wave + (wave | quest), dflong)
screenreg(list(nb_intercept, nb_coef))

# Negative binomial models
nb.mD1 <- glmer.nb(vio ~ legitimacy + wave + (1 | quest), dflong)
nb.mD2 <- glmer.nb(vio ~ legitimacy + wave +  white + male + class + factor(area) + (1 | quest), dflong)
list(
  'Model A-D1' = nb.mD1,
  'Model A-D2' = nb.mD2
) %>% screenreg(ci.force = T)

####
library(regmedint)
m <- regmedint(dflong %>% dplyr::select(vio_scale, legitimacy, lc, pj, class) %>% drop_na()
               , yvar = 'vio_scale', avar = c('lc'), mvar = 'legitimacy', cvar = c('class', 'pj'), a0 = 0, a1 = 1, m_cde = 0, c_cond = c(3, 0), mreg = 'linear', yreg = 'linear', interaction = T, na_omit = T)

m.med <- lmer(legitimacy ~ ovp + lc + pj + stop + white + class + male + (1 | quest), dflong)
m.out <- lmer(vio_scale ~ legitimacy + ovp + lc + pj + stop + white + class + male + (1 | quest), dflong)
library(mediation)
med.model <- mediate(m.med, m.out, treat = 'lc', mediator = 'legitimacy', sims = 10)

####

## Longitudinal mediation model estimated on mplus

# Export data to mplus
dflong %>%
  dplyr::select(quest, wave, ovp, lec, legitimacy, vio,
                vio1, vio2, vio3, vio4, vio6, vio6) %>%
  pivot_wider(id_cols = quest,
              names_from = wave,
              values_from = c('ovp', 'lc', 'legitimacy', 'pj', 'vio',
                              'vio1', 'vio2', 'vio3', 'vio4', 'vio6')) %>%
  prepareMplusData(filename = 'data/longitudinal_mediation.dat')


# Calculating 95% CIs for the mediation model (Table 5):
mediation_model <- data.frame(path = c('A1', 'A2', 'B', 'C', 'D1', 'D2', 'E', 'F1', 'F2', 'D1*E', 'D2*E'),
                              coef = c(0.795, 0.986, 0.239, 0.183, -0.119, -0.213, -0.059, 0.001, 0.014, 0.007, 0.013),
                              se = c(0.015, 0.004, 0.028, 0.022, 0.018, 0.017, 0.029, 0.031, 0.030, 0.004, 0.006)) %>%
  mutate(lowerbound = round(coef - 1.96 * se, 2),
         upperbound = round(coef + 1.96 * se, 2)) %>%
  print()


# Appendix: police legitmacy and tolerance of violence: breakdown
nb.vio1 <- glmer(vio1 ~ legitimacy + wave +  white + male + class + factor(area) + (1 | quest),
                 family = binomial(link = 'logit'), dflong)
nb.vio2 <- glmer(vio2 ~ legitimacy + wave +  white + male + class + factor(area) + (1 | quest),
                 family = binomial(link = 'logit'), dflong)
nb.vio3 <- glmer(vio3 ~ legitimacy + wave +  white + male + class + factor(area) + (1 | quest),
                 family = binomial(link = 'logit'), dflong)
nb.vio4 <- glmer(vio4 ~ legitimacy + wave +  white + male + class + factor(area) + (1 | quest),
                 family = binomial(link = 'logit'), dflong)
nb.vio5 <- glmer(vio5 ~ legitimacy + wave +  white + male + class + factor(area) + (1 | quest),
                 family = binomial(link = 'logit'), dflong)
nb.vio6 <- glmer(vio6 ~ legitimacy + wave +  white + male + class + factor(area) + (1 | quest),
                 family = binomial(link = 'logit'), dflong)
list(
  nb.vio1, nb.vio2, nb.vio3, nb.vio4, nb.vio5, nb.vio6
) %>% screenreg(ci.force = T)

######
# Mediation model

dfwide <-
  dflong %>%
  dplyr::select(quest, wave, 
                white, male, class, area1, area2, area3, area4, area5, area6, area7, area8,
                ovp, lc, legitimacy, pj, vio, vio_scale, gunall,
                vio1, vio2, vio3, vio4, vio5, vio6) %>%
  pivot_wider(id_cols = c(quest, white, male, class, area1, area2, area3, area4, area5, area6, area7, area8),
              names_from = wave,
              values_from = c('ovp', 'lc', 'legitimacy', 'vio', 'pj', 'gunall', 'vio_scale',
                              'vio1', 'vio2', 'vio3', 'vio4', 'vio5', 'vio6'))

model.mediation.lavaan <- '
                          ovp_3 ~ A1*ovp_2
                          ovp_2 ~ A1*ovp_1
                          
                          lc_3 ~ A2*lc_2
                          lc_2 ~ A2*lc_1
                          
                          legitimacy_3 ~ B*legitimacy_2 + D1*ovp_2 + D2*lc_2
                          legitimacy_2 ~ B*legitimacy_1 + D1*ovp_1 + D2*lc_1
                          
                          vio_scale_3 ~ C*vio_scale_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1
                          vio_scale_2 ~ C*vio_scale_1 + E*legitimacy_1
                          
                          # Indirect effects
                          D1E := D1 * E
                          D23 := D2 * E
                          
                          Total_ovp := F1 + (D1*E)
                          Total_lc := F2 + (D2*E)
                          '

mediation.fit <- sem(model.mediation.lavaan, std.lv = T, data = dfwide, ordered = c('vio_2', 'vio_3'))
summary(mediation.fit)

mediation.fit <- sem(model.mediation.lavaan, std.lv = T, data = dfwide, estimator = 'MLR', missing = 'ML', fixed.x = T)
summary(mediation.fit)

mediation.fit_MLR <- sem(model.mediation.lavaan, std.lv = T, data = dfwide_mediation, estimator = 'MLR', missing = "ML", fixed.x = T)
summary(mediation.fit_MLR)

## With controls
model.mediation.lavaan_controls <- paste(
  model.mediation.lavaan,
  '
  ovp_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  lc_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  legitimacy_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  vio_scale_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  
  legitimacy_3 ~ bla*pj_2 + ble*gunall_2
  legitimacy_2 ~ bla*pj_1 + ble*gunall_1
                          
#  vio_3 ~ pj_1
  '
)

mediation.fit_controls <- sem(model.mediation.lavaan_controls, std.lv = T, data = dfwide, ordered = c('vio_1', 'vio_2', 'vio_3'))
summary(mediation.fit_controls)

mediation.fit.MLR_controls <- sem(model.mediation.lavaan_controls, std.lv = T, data = dfwide, estimator = 'MLF', missing = 'ML', fixed.x = T)
summary(mediation.fit.MLR_controls)


#####
# breakdown by violence
model.mediation.breakdown <- 
  '
  ovp_3 ~ A1*ovp_2
  ovp_2 ~ A1*ovp_1
  
  lc_3 ~ A2*lc_2
  lc_2 ~ A2*lc_1
  
  legitimacy_3 ~ B*legitimacy_2 + D1*ovp_2 + D2*lc_2 + bla*pj_2 + ble*gunall_2
  legitimacy_2 ~ B*legitimacy_1 + D1*ovp_1 + D2*lc_1 + bla*pj_1 + ble*gunall_1
  
  ovp_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  lc_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  legitimacy_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  
  # Indirect effects
  D1E := D1 * E
  D23 := D2 * E
  
  Total_ovp := F1 + (D1*E)
  Total_lc := F2 + (D2*E)
  '

# First scenario
model.mediation.breakdown.vio1 <- paste(
  model.mediation.breakdown,
  '
  vio1_3 ~ C*vio1_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1
  vio1_2 ~ C*vio1_1 + E*legitimacy_1
  vio1_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  '
)

# Second scenario
model.mediation.breakdown.vio2 <- paste(
  model.mediation.breakdown,
  '
  vio2_3 ~ C*vio2_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1
  vio2_2 ~ C*vio2_1 + E*legitimacy_1
  vio2_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  '
)

# Third scenario
model.mediation.breakdown.vio3 <- paste(
  model.mediation.breakdown,
  '
  vio3_3 ~ C*vio3_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1
  vio3_2 ~ C*vio3_1 + E*legitimacy_1
  vio3_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  '
)

# Fourth scenario
model.mediation.breakdown.vio4 <- paste(
  model.mediation.breakdown,
  '
  vio4_3 ~ C*vio4_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1
  vio4_2 ~ C*vio4_1 + E*legitimacy_1
  vio4_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  '
)

# Fifth scenario
model.mediation.breakdown.vio5 <- paste(
  model.mediation.breakdown,
  '
  vio5_3 ~ C*vio5_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1
  vio5_2 ~ C*vio5_1 + E*legitimacy_1
  vio5_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  '
)

# Sixth scenario
model.mediation.breakdown.vio6 <- paste(
  model.mediation.breakdown,
  '
  vio6_3 ~ C*vio6_2 + E*legitimacy_2 + F1*ovp_1 + F2*lc_1
  vio6_2 ~ C*vio6_1 + E*legitimacy_1
  vio6_1 ~ white + male + class + area1 + area3 + area4 + area5 + area6 + area7
  '
)


model.mediation.breakdown.vio1.fit <- sem(model.mediation.breakdown.vio1, data = dfwide, std.lv = T, ordered = c('vio1_1', 'vio1_2', 'vio1_3'))
model.mediation.breakdown.vio2.fit <- sem(model.mediation.breakdown.vio2, data = dfwide, std.lv = T, ordered = c('vio2_1', 'vio2_2', 'vio2_3'))
model.mediation.breakdown.vio3.fit <- sem(model.mediation.breakdown.vio3, data = dfwide, std.lv = T, ordered = c('vio3_1', 'vio3_2', 'vio3_3'))
model.mediation.breakdown.vio4.fit <- sem(model.mediation.breakdown.vio4, data = dfwide, std.lv = T, ordered = c('vio4_1', 'vio4_2', 'vio4_3'))
model.mediation.breakdown.vio5.fit <- sem(model.mediation.breakdown.vio5, data = dfwide, std.lv = T, ordered = c('vio5_1', 'vio5_2', 'vio5_3'))
model.mediation.breakdown.vio6.fit <- sem(model.mediation.breakdown.vio6, data = dfwide, std.lv = T, ordered = c('vio6_1', 'vio6_2', 'vio6_3'))


model.mediation.breakdown.vio1.fit_MLF <- sem(model.mediation.breakdown.vio1, data = dfwide, std.lv = T, estimator = 'MLF', missing = 'ML', fixed.x = T)
model.mediation.breakdown.vio2.fit_MLF <- sem(model.mediation.breakdown.vio2, data = dfwide, std.lv = T, estimator = 'MLF', missing = 'ML', fixed.x = T)
model.mediation.breakdown.vio3.fit_MLF <- sem(model.mediation.breakdown.vio3, data = dfwide, std.lv = T, estimator = 'MLF', missing = 'ML', fixed.x = T)
model.mediation.breakdown.vio4.fit_MLF <- sem(model.mediation.breakdown.vio4, data = dfwide, std.lv = T, estimator = 'MLF', missing = 'ML', fixed.x = T)
model.mediation.breakdown.vio5.fit_MLF <- sem(model.mediation.breakdown.vio5, data = dfwide, std.lv = T, estimator = 'MLF', missing = 'ML', fixed.x = T)
model.mediation.breakdown.vio6.fit_MLF <- sem(model.mediation.breakdown.vio6, data = dfwide, std.lv = T, estimator = 'MLF', missing = 'ML', fixed.x = T)

summary(model.mediation.breakdown.vio1.fit)
summary(model.mediation.breakdown.vio1.fit_MLF)

summary(model.mediation.breakdown.vio2.fit)
summary(model.mediation.breakdown.vio2.fit_MLF)

summary(model.mediation.breakdown.vio3.fit)
summary(model.mediation.breakdown.vio3.fit_MLF)

summary(model.mediation.breakdown.vio4.fit)
summary(model.mediation.breakdown.vio4.fit_MLF)

summary(model.mediation.breakdown.vio5.fit)
summary(model.mediation.breakdown.vio5.fit_MLF)

summary(model.mediation.breakdown.vio6.fit)
summary(model.mediation.breakdown.vio6.fit_MLF)
